diff --git a/redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java b/redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java
index effcbe3..911f6ed 100644
--- a/redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java
+++ b/redisson/src/main/java/org/redisson/RedissonLocalCachedMap.java
@@ -61,6 +61,7 @@
     private int invalidateEntryOnChange;
     private SyncStrategy syncStrategy;
     private LocalCachedMapOptions.StoreMode storeMode;
+    private boolean storeCacheMiss;

     private LocalCacheListener listener;
     private LocalCacheView<K, V> localCacheView;
@@ -80,6 +81,7 @@
     private void init(String name, LocalCachedMapOptions<K, V> options, RedissonClient redisson, EvictionScheduler evictionScheduler) {
         syncStrategy = options.getSyncStrategy();
         storeMode = options.getStoreMode();
+        storeCacheMiss = options.isStoreCacheMiss();

         listener = new LocalCacheListener(name, commandExecutor, this, codec, options, cacheUpdateLogTime) {

@@ -212,7 +214,7 @@

         CacheKey cacheKey = localCacheView.toCacheKey(key);
         CacheValue cacheValue = cache.get(cacheKey);
-        if (cacheValue != null && cacheValue.getValue() != null) {
+        if (cacheValue != null && (storeCacheMiss || cacheValue.getValue() != null)) {
             return RedissonPromise.newSucceededFuture((V) cacheValue.getValue());
         }

@@ -226,7 +228,7 @@
                 return;
             }

-            if (value != null) {
+            if (storeCacheMiss || value != null) {
                 cachePut(cacheKey, key, value);
             }
         });
@@ -244,7 +246,7 @@
         return result;
     }

-
+
     @Override
     protected RFuture<V> putOperationAsync(K key, V value) {
         ByteBuf mapKey = encodeMapKey(key);